# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ktj0lDYDYA8HWK4y1vcb2YHpSZunZsBR
"""

print("hello world")

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

diabetes_dataset = pd.read_csv('/diabetes.csv')

diabetes_dataset.head()

diabetes_dataset.shape

diabetes_dataset.columns

diabetes_dataset.describe()

diabetes_dataset['Outcome'].value_counts()

diabetes_dataset.groupby('Outcome').mean()

X = diabetes_dataset.drop(columns='Outcome' , axis=1)
Y = diabetes_dataset['Outcome']

diabetes_dataset.head()

print(X)

print(Y)

Scalar = StandardScaler()

Scalar.fit(X)

standardized_data = Scalar.transform(X)

print(X)

print(standardized_data)

print(X)
print(Y)

X_train , X_test , Y_train , Y_test = train_test_split(X , Y , test_size=0.2 , stratify=Y , random_state=2)

print(X.shape , X_train.shape , X_test.shape)

classifier = svm.SVC(kernel='linear')

classifier.fit(X_train , Y_train)

X_train_prediction = classifier.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction , Y_train)

print('Accuracy score of the training data : ' , training_data_accuracy)

X_test_predication =  classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_predication , Y_test)

print('accuracy score of the text  data  : ' , test_data_accuracy)

input_data  = (5 , 166 , 72 , 19 , 175  , 25 , 8 , 0 )
input_data_as_numpy_array = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
std_data = Scalar.transform(input_data_reshaped)
print(std_data)

prediction = classifier.predict(std_data)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')

